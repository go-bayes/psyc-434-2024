{
  "hash": "c48ec96e20a4553b1037e74f97031552",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Measurement from a Causal Perspective\"\ndate: \"2024-MAY-20\"\nbibliography: /Users/joseph/GIT/templates/bib/references.bib\neditor_options: \n  chunk_output_type: console\nformat:\n  html:\n    warnings: FALSE\n    error: FALSE\n    messages: FALSE\n    code-overflow: scroll\n    highlight-style: oblivion\n    code-tools:\n      source: true\n      toggle: FALSE\nhtml-math-method: katex\nreference-location: margin\ncitation-location: margin\ncap-location: margin\ncode-block-border-left: true\n---\n\n\n\n\n\n\n\n::: {.callout-note}\n**Required**\n- [@fischer2019primer] [link](https://www.dropbox.com/scl/fi/1h8slzy3vzscvbtp6yrjh/FischeKarlprimer.pdf?rlkey=xl93d5y7280c1qjhn3k2g8qls&dl=0)\n\n##### Optional Readings \n- [@Vijver2021CulturePsychology] [link](https://doi.org/10.1017/9781107415188)\n- [@he2012] [link](https://www.dropbox.com/scl/fi/zuv4odmxbz8dbtdjfap3e/He-BiasandEquivalence.pdf?rlkey=wezprklb4jm6rgvvx0g58nw1n&dl=0ā)\n- [@Harkness2003TRANSALTION] [link](https://www.dropbox.com/scl/fi/hmmje9vbunmcu3oiahaa5/Harkness_CC_translation.pdf?rlkey=6vqq3ap5n52qp7t1e570ubpgt&dl=0)\n:::\n\n::: {.callout-important}\n## Key concepts\n- EFA\n- CFA\n- Multigroup CFA\n- Invariance Testing\n:::\n\n::: {.callout-important}\n- You need to know these measurement concepts\n:::\n\n\n#### Readings\n\n- [@fischer2019primer] [link](https://www.dropbox.com/scl/fi/1h8slzy3vzscvbtp6yrjh/FischeKarlprimer.pdf?rlkey=xl93d5y7280c1qjhn3k2g8qls&dl=0)\n\n##### Optional Readings \n\n- [@Vijver2021CulturePsychology] [link](https://doi.org/10.1017/9781107415188)\n- [@he2012] [link](https://www.dropbox.com/scl/fi/zuv4odmxbz8dbtdjfap3e/He-BiasandEquivalence.pdf?rlkey=wezprklb4jm6rgvvx0g58nw1n&dl=0ā)\n- [@Harkness2003TRANSALTION] [link](https://www.dropbox.com/scl/fi/hmmje9vbunmcu3oiahaa5/Harkness_CC_translation.pdf?rlkey=6vqq3ap5n52qp7t1e570ubpgt&dl=0)\n\n#### Lab\n\n- R exercises focusing on measurement theory applications and graphing\n\n\n## Overview\nBy the conclusion of our session, you will gain proficiency in key areas of factor analysis.\n\nSpecifically, you will learn how to perform:\n\n- Exploratory factor analysis,\n- Confirmatory factor analysis (CFA),\n- Multigroup CFA,\n- Assess partial invariance,\n- And understand configural, metric, and scalar equivalence through a practical example.\n\n\n\n## Focus on Kessler-6 Anxiety\n\nThe code below will:\n\n-   Load required packages.\n-   Select the Kessler 6 items\n-   Check whether there is sufficient correlation among the variables to support factor analysis.\n\n#### 1. Select Scale\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get synthetic data\nlibrary(margot)\nlibrary(tidyverse)\nlibrary(performance)\n# select the columns we need. \ndt_only_k6 <- df_nz |> \n  filter(wave == 2018) |> \n  select(\n    kessler_depressed,\n    kessler_effort,\n    kessler_hopeless,\n    kessler_worthless,\n    kessler_nervous,\n    kessler_restless\n  )\n\n\n# check factor structure\nperformance::check_factorstructure(dt_only_k6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Is the data suitable for Factor Analysis?\n\n\n  - Sphericity: Bartlett's test of sphericity suggests that there is sufficient significant correlation in the data for factor analysis (Chisq(15) = 50402.32, p < .001).\n  - KMO: The Kaiser, Meyer, Olkin (KMO) overall measure of sampling adequacy suggests that data seems appropriate for factor analysis (KMO = 0.87). The individual KMO scores are: kessler_depressed (0.85), kessler_effort (0.90), kessler_hopeless (0.86), kessler_worthless (0.85), kessler_nervous (0.90), kessler_restless (0.88).\n```\n\n\n:::\n:::\n\n\n\n\n\n- start with `df_nz` synthetic dataset. \n- take items from the Kessler-6 (K6) scale: depressed, effort, hopeless, worthless, nervous, and restless.\n- Do the items in this scale cohere? If so, how?\n\n##### Code and Analysis:\n\nWe employ `performance::check_factorstructure()` to evaluate the data's suitability for factor analysis. Two tests are reported:\n\na. **Bartlett's Test of Sphericity**\n\nThis test verifies if the correlation matrix significantly deviates from an identity matrix, an indicator that the variables are interrelated and suitable for factor analysis. The outcome:\n\n- **Chi-square (Chisq)**: 50402.32 with **Degrees of Freedom (15)** and a **p-value** < .001\n\nThis highly reliable result (p < .001) confirms that the observed correlation matrix is not an identity matrix, substantiating the factorability of the dataset.\n\nb. **Kaiser-Meyer-Olkin (KMO) Measure**\n\nThe KMO test measures sampling adequacy by comparing the magnitudes of observed correlation coefficients to those of partial correlation coefficients. A KMO value nearing 1 indicates appropriateness for factor analysis. The results are:\n\n- **Overall KMO**: 0.87\n  - This value suggests good sampling adequacy, indicating that the sum of partial correlations is relatively low compared to the sum of correlations, thus supporting the potential for distinct and reliable factors.\n\nEach item’s KMO value exceeds the acceptable threshold of 0.5,so suitabile for factor analysis.\n\n\n### 2. Explore Factor Structure \n\nThe following R code allows us to perform exploratory factor analysis (EFA) on the Kessler 6 (K6) scale data, assuming three latent factors. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# exploratory factor analysis\n# explore a factor structure made of 3 latent variables\nlibrary(psych)\nefa <- psych::fa(dt_only_k6, nfactors = 3) |>\n  model_parameters(sort = TRUE, threshold = \"max\")\n\nprint( efa )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Rotated loadings from Factor Analysis (oblimin-rotation)\n\nVariable          | MR3  | MR1  | MR2  | Complexity | Uniqueness\n----------------------------------------------------------------\nkessler_hopeless  | 0.79 |      |      |    1.00    |    0.32   \nkessler_worthless | 0.79 |      |      |    1.01    |    0.34   \nkessler_depressed |      | 0.99 |      |    1.00    |  4.98e-03 \nkessler_restless  |      |      | 0.72 |    1.03    |    0.47   \nkessler_nervous   |      |      | 0.43 |    1.91    |    0.57   \nkessler_effort    |      |      | 0.38 |    2.00    |    0.53   \n\nThe 3 latent factors (oblimin rotation) accounted for 62.94% of the total variance of the original data (MR3 = 28.20%, MR1 = 17.56%, MR2 = 17.18%).\n```\n\n\n:::\n:::\n\n\n\n\n### 2. Explore Factor Structure\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(psych)\nefa <- psych::fa(dt_only_k6, nfactors = 3) |>\n  model_parameters(sort = TRUE, threshold = \"max\")\nprint(efa)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Rotated loadings from Factor Analysis (oblimin-rotation)\n\nVariable          | MR3  | MR1  | MR2  | Complexity | Uniqueness\n----------------------------------------------------------------\nkessler_hopeless  | 0.79 |      |      |    1.00    |    0.32   \nkessler_worthless | 0.79 |      |      |    1.01    |    0.34   \nkessler_depressed |      | 0.99 |      |    1.00    |  4.98e-03 \nkessler_restless  |      |      | 0.72 |    1.03    |    0.47   \nkessler_nervous   |      |      | 0.43 |    1.91    |    0.57   \nkessler_effort    |      |      | 0.38 |    2.00    |    0.53   \n\nThe 3 latent factors (oblimin rotation) accounted for 62.94% of the total variance of the original data (MR3 = 28.20%, MR1 = 17.56%, MR2 = 17.18%).\n```\n\n\n:::\n:::\n\n\n\n\n#### Concept of Rotation in Factor Analysis\n\nIn factor analysis, rotation is a mathematical technique applied to the factor solution to make it more interpretable. \n\nThe ourpose of rotation is to redistribute the variance among the factors, aiming to achieve a simpler and more meaningful structure that aligns more closely with theoretical or empirical expectations. There are two types:\n\n**Orthogonal rotations** (such as Varimax), which assume that the factors are uncorrelated and keep the axes at 90 degrees to each other. This is useful when we assume that the underlying factors are independent.\n\n**Oblique rotations** (such as Oblimin), which allow the factors to correlate. This is more realistic in psychological and social sciences, and that's what we use...\n\n#### Results \n\n\nThis factor analysis uses oblimin rotation, and the items loaded as follows on the three factors:\n\n- **MR3**: Strongly associated with 'kessler_hopeless' (0.79) and 'kessler_worthless' (0.79). This factor might be capturing aspects related to feelings of hopelessness and worthlessness, often linked with depressive affect.\n- **MR1**: Mostly linked with 'kessler_depressed' (0.99), suggesting this factor represents core depressive symptoms.\n- **MR2**: Includes 'kessler_restless' (0.72), 'kessler_nervous' (0.43), and 'kessler_effort' (0.38). This factor seems to encompass symptoms related to anxiety and agitation.\n\nThe **complexity** values indicate the number of factors each item loads on \"significantly.\"  A complexity near 1.00 suggests that the item predominantly loads on a single factor, which is seen with most of the items except for 'kessler_nervous' and 'kessler_effort', which show higher complexity and thus share variance with more than one factor.\n\n**Uniqueness** values represent the variance in each item not explained by the common factors. Lower uniqueness values for items like 'kessler_depressed' indicate that the factor explains most of the variance for that item.\n\n#### Variance Explained\n\nThe three factors together account for 62.94% of the total variance in the data, distributed as follows:\n- **MR3**: 28.20%\n- **MR1**: 17.56%\n- **MR2**: 17.18%\n\nThis indicates a substantial explanation of the data’s variance by the model, with the highest contribution from the factor associated with hopelessness and worthlessness.\n\n\nSo, the results indicate that the first two factors (MR1 and MR2) capture the dominant themes of psychological distress measured by the K6 scale, with depressive symptoms and anxiety being particularly prominent. The third factor (MR3), although explaining a smaller portion of the variance, suggests other dimensions of distress that may be relevant in specific contexts.\n\n#### Consensus View?\n\nThere are different algorithms for assessing the factor structure.  The performance package allows us to consider a 'consensus' view.\n\n\n\n\n\n::: {.cell .column-page-right}\n\n```{.r .cell-code  code-fold=\"true\"}\nn <-n_factors(dt_only_k6)\nn\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Method Agreement Procedure:\n\nThe choice of 1 dimensions is supported by 8 (50.00%) methods out of 16 (Optimal coordinates, Acceleration factor, Parallel analysis, Kaiser criterion, Scree (SE), Scree (R2), VSS complexity 1, Velicer's MAP).\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\n# plot\nplot(n) + theme_classic()\n```\n\n::: {.cell-output-display}\n![](11-content_files/figure-html/plot_factors-1.png){width=672}\n:::\n:::\n\n\n\n\nOutput: \n\n> The choice of 1 dimensions is supported by 8 (50.00%) methods out of 16 (Optimal coordinates, Acceleration factor, Parallel analysis, Kaiser criterion, Scree (SE), Scree (R2), VSS complexity 1, Velicer's MAP). \n\n\nThe result indicates that a single dimension is supported by half of the methods used (8 out of 16).  However science isn't a matter of voting, so let's press on. \n\n\n### Confirmatory Factor Analysis (ignoring groups)\n\nCFA to validate the hypothesised factor structures derived from EFA. \n\n- **One-factor model**: assumes all items measure a single underlying construct.\n- **Two-factor model**: assumes two distinct constructs measured by the items.\n- **Three-factor model**: assumes three distinct constructs measured by the items.\n\nhis is what we do:\n\n#### 1. Data Partition\n\nFirst, we take the dataset (`dt_only_k6`) and partition it into training and testing sets. This division helps in validating the model built on the training data against an unseen test set; this enhances robustness for the factor analysis findings.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npart_data <- datawizard::data_partition(dt_only_k6, training_proportion = .7, seed = 123)\ntraining <- part_data$p_0.7\ntest <- part_data$test\n```\n:::\n\n\n\n\n#### 2. Model Setup for CFA\n\nBases on the EFA results, we consider three different factor structures\n\n- **One-factor model**: assumes all items measure a single underlying construct.\n- **Two-factor model**: assumes two distinct constructs measured by the items.\n- **Three-factor model**: assumes three distinct constructs measured by the items.\n\nWe fit each model to the training data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# One-factor model\nstructure_k6_one <- psych::fa(training, nfactors = 1) |>\n  efa_to_cfa()\n\n# Two-factor model\nstructure_k6_two <- psych::fa(training, nfactors = 2) |>\n  efa_to_cfa()\n\n# Three-factor model\nstructure_k6_three <- psych::fa(training, nfactors = 3) %>%\n  efa_to_cfa()\n```\n:::\n\n\n\n\n\nThen we split our data for cross-validation\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# first partition the data \npart_data <- datawizard::data_partition(dt_only_k6, traing_proportion = .7, seed = 123)\n\n\n# set up training data\ntraining <- part_data$p_0.7\ntest <- part_data$test\n\n\n# one factor model\nstructure_k6_one <- psych::fa(training, nfactors = 1) |>\n  efa_to_cfa()\n\n# two factor model model\nstructure_k6_two <- psych::fa(training, nfactors = 2) |>\n  efa_to_cfa()\n\n# three factor model\nstructure_k6_three <- psych::fa(training, nfactors = 3) %>%\n  efa_to_cfa()\n\n# inspect models\nstructure_k6_one\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Latent variables\nMR1 =~ kessler_depressed + kessler_effort + kessler_hopeless + kessler_worthless + kessler_nervous + kessler_restless + .row_id\n```\n\n\n:::\n\n```{.r .cell-code}\nstructure_k6_two\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Latent variables\nMR1 =~ kessler_depressed + kessler_hopeless + kessler_worthless\nMR2 =~ kessler_effort + kessler_nervous + kessler_restless + .row_id\n```\n\n\n:::\n\n```{.r .cell-code}\nstructure_k6_three\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Latent variables\nMR1 =~ kessler_depressed + kessler_hopeless + kessler_worthless\nMR2 =~ kessler_effort\nMR3 =~ kessler_nervous + kessler_restless + .row_id\n```\n\n\n:::\n:::\n\n\n\n\n- **One-Factor Model**: All items are linked to a single factor (`MR1`).\n  \n- **Two-Factor Model**: \n  - `MR1` is linked with `kessler_depressed`, `kessler_hopeless`, and `kessler_worthless`, suggesting these items might represent a more depressive aspect of **distress.**\n  - `MR2` is associated with `kessler_effort`, `kessler_nervous`, and `kessler_restless`, which could indicate a different aspect, perhaps related to **anxiety or agitation.**\n\n- **Three-Factor Model**: \n  - `MR1` includes `kessler_depressed`, `kessler_effort`, `kessler_hopeless`, and `kessler_worthless`, indicating a broad factor possibly encompassing overall distress.\n  - `MR2` consists solely of `kessler_effort`.\n  - `MR3` includes `kessler_nervous` + `kessler_restless`, which might imply these are distinctivene from other distress components.\n  \n\nDo these results make sense?\n  \n  \nNext we perform the confirmatory factor analysis itself...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# fit and compare models\n\n# one latent model\none_latent <-\n  suppressWarnings(lavaan::cfa(structure_k6_one, data = test))\n\n# two latents model\ntwo_latents <-\n  suppressWarnings(lavaan::cfa(structure_k6_two, data = test))\n\n# three latents model\nthree_latents <-\n  suppressWarnings(lavaan::cfa(structure_k6_three, data = test))\n\n\n# compare models\ncompare <-\n  performance::compare_performance(one_latent, two_latents, three_latents, verbose = FALSE)\n\n# select cols we want\nkey_columns_df <- compare[, c(\"Model\", \"Chi2\", \"Chi2_df\", \"CFI\", \"RMSEA\", \"RMSEA_CI_low\", \"RMSEA_CI_high\", \"AIC\", \"BIC\")]\n\n# view as html table\nas.data.frame(key_columns_df) |>\n  kbl(format = \"markdown\")\n```\n\n::: {.cell-output-display}\n\n\n|Model  |      Chi2| Chi2_df|       CFI|     RMSEA| RMSEA_CI_low| RMSEA_CI_high|      AIC|      BIC|\n|:------|---------:|-------:|---------:|---------:|------------:|-------------:|--------:|--------:|\n|lavaan | 805.47732|      14| 0.9468004| 0.0985415|    0.0928176|     0.1043876| 195671.0| 195764.3|\n|lavaan | 161.24069|      13| 0.9900359| 0.0442564|    0.0382928|     0.0504917| 195028.7| 195128.8|\n|lavaan |  80.53628|      12| 0.9953933| 0.0313209|    0.0250361|     0.0379798| 194950.0| 195056.7|\n\n\n:::\n:::\n\n\n\n\n####  Metrics:\n\n- **Chi2 (Chi-Square Test)**: A lower Chi2 value indicates a better fit of the model to the data.\n- **df (Degrees of Freedom)**: Reflects the model complexity.\n- **CFI (Comparative Fit Index)**: Values closer to 1 indicate a better fit. A value above 0.95 is generally considered to indicate a good fit.\n- **RMSEA (Root Mean Square Error of Approximation)**: values less than 0.05 indicate a good fit, and values up to 0.08 are acceptable.\n- **AIC (Akaike Information Criterion) and BIC (Bayesian Information Criterion)**: lower values are better, indicating a more parsimonious model, with the BIC imposing a penalty for model complexity.\n\n#### Model Selection:\n\nWhat do you think? \n\n- The **Three Latents Model** shows the best fit across all indicators, having the lowest Chi2, RMSEA, and the highest CFI. It also has the lowest AIC and BIC scores, suggesting it not only fits well but is also the most parsimonious among the tested models. \n\nBut... \n\n- **The CFI** for the two-factor model is 0.990, which is close to 1 and suggests a very good fit to the data. This is superior to the one-factor model (CFI = 0.9468) and slightly less than the three-factor model (CFI = 0.9954). A CFI value closer to 1 indicates a better fit of the model to the data.\n\n- **Root Mean Square Error of Approximation (RMSEA):** The two-factor model has an RMSEA of 0.0443, which is within the excellent fit range (below 0.05). It significantly improves upon the one-factor model's RMSEA of 0.0985 and is only slightly worse than the three-factor model's 0.0313.\n\n- **BIC* isn't much different, So\n\nWe might say the two-factor model strikes a balance between simplicity and model fit. It has fewer factors than the three-factor model, making it potentially easier to interpret while still capturing the variance in the data.\n\nLook at the items. What do you think? \n\nDoes Anxiety appear to differ from Depression? \n\n### Multi-group Confirmatory Factor Analysis\n\nThis script runs multi-group confirmatory factor analysis (MG-CFA) to assess the invariance of the Kessler 6 (K6) distress scale across two ethnic groups: European New Zealanders and Māori.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# select needed columns plus 'ethnicity'\n# filter dataset for only 'euro' and 'maori' ethnic categories\ndt_eth_k6_eth <- df_nz |> \n  filter(wave == 2018) |> \n  filter(eth_cat == \"euro\" | eth_cat == \"maori\") |> \n  select(kessler_depressed, kessler_effort, kessler_hopeless,\n         kessler_worthless, kessler_nervous, kessler_restless, eth_cat)\n\n# partition the dataset into training and test subsets\n# stratify by ethnic category to ensure balanced representation\npart_data_eth <- datawizard::data_partition(dt_eth_k6_eth, training_proportion = .7, seed = 123, group = \"eth_cat\")\n\ntraining_eth <- part_data_eth$p_0.7\ntest_eth <- part_data_eth$test\n\n# configural invariance models\n#run CFA models specifying one, two, and three latent variables without constraining across groups\none_latent_eth_configural <- suppressWarnings(lavaan::cfa(structure_k6_one, group = \"eth_cat\", data = test_eth))\ntwo_latents_eth_configural <- suppressWarnings(lavaan::cfa(structure_k6_two, group = \"eth_cat\", data = test_eth))\nthree_latents_eth_configural <- suppressWarnings(lavaan::cfa(structure_k6_three, group = \"eth_cat\", data = test_eth))\n\n# compare model performances for configural invariance\ncompare_eth_configural <- performance::compare_performance(one_latent_eth_configural, two_latents_eth_configural, three_latents_eth_configural, verbose = FALSE)\ncompare_eth_configural\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Comparison of Model Performance Indices\n\nName                         |  Model |    Chi2 | Chi2_df | p (Chi2) | Baseline(42) | p (Baseline) |   GFI |  AGFI |   NFI |  NNFI |   CFI | RMSEA |    RMSEA  CI | p (RMSEA) |    RMR |  SRMR |   RFI |  PNFI |   IFI |   RNI | Loglikelihood |   AIC (weights) |   BIC (weights) | BIC_adjusted\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\none_latent_eth_configural    | lavaan | 800.969 |  28.000 |   < .001 |    13476.695 |       < .001 | 0.982 | 0.956 | 0.941 | 0.914 | 0.942 | 0.102 | [0.10, 0.11] |    < .001 | 40.211 | 0.041 | 0.911 | 0.627 | 0.943 | 0.942 |    -87776.911 | 1.8e+05 (<.001) | 1.8e+05 (<.001) |    1.758e+05\ntwo_latents_eth_configural   | lavaan | 180.274 |  26.000 |   < .001 |    13476.695 |       < .001 | 0.996 | 0.990 | 0.987 | 0.981 | 0.989 | 0.047 | [0.04, 0.05] |    0.735  | 31.500 | 0.018 | 0.978 | 0.611 | 0.989 | 0.989 |    -87466.564 | 1.8e+05 (<.001) | 1.8e+05 (<.001) |    1.752e+05\nthree_latents_eth_configural | lavaan | 113.269 |  24.000 |   < .001 |    13476.695 |       < .001 | 0.998 | 0.993 | 0.992 | 0.988 | 0.993 | 0.038 | [0.03, 0.04] |    0.998  | 27.758 | 0.014 | 0.985 | 0.567 | 0.993 | 0.993 |    -87433.062 | 1.7e+05 (>.999) | 1.8e+05 (>.999) |    1.751e+05\n```\n\n\n:::\n\n```{.r .cell-code}\n# metric invariance models\n# run CFA models holding factor loadings equal across groups\none_latent_eth_metric <- suppressWarnings(lavaan::cfa(structure_k6_one, group = \"eth_cat\", group.equal = \"loadings\", data = test_eth))\ntwo_latents_eth_metric  <- suppressWarnings(lavaan::cfa(structure_k6_two, group = \"eth_cat\", group.equal = \"loadings\", data = test_eth))\nthree_latents_eth_metric  <- suppressWarnings(lavaan::cfa(structure_k6_three, group = \"eth_cat\",group.equal = \"loadings\", data = test_eth))\n\n# compare model performances for metric invariance\ncompare_eth_metric  <- performance::compare_performance(one_latent_eth_metric, two_latents_eth_metric, three_latents_eth_metric, verbose = FALSE)\n\n# scalar invariance models\n# run CFA models holding factor loadings and intercepts equal across groups\none_latent_eth_scalar <- suppressWarnings(lavaan::cfa(structure_k6_one, group = \"eth_cat\", group.equal = c(\"loadings\",\"intercepts\"), data = test_eth))\ntwo_latents_eth_scalar  <- suppressWarnings(lavaan::cfa(structure_k6_two, group = \"eth_cat\", group.equal =  c(\"loadings\",\"intercepts\"), data = test_eth))\nthree_latents_eth_scalar  <- suppressWarnings(lavaan::cfa(structure_k6_three, group = \"eth_cat\",group.equal =  c(\"loadings\",\"intercepts\"), data = test_eth))\n\n# Compare model performances for scalar invariance\ncompare_eth_scalar <- compare_eth_scalar  <- performance::compare_performance(one_latent_eth_scalar, two_latents_eth_scalar, three_latents_eth_scalar, verbose = FALSE)\n```\n:::\n\n\n\nThe concepts of *configural*, *metric*, and *scalar invariance* relate to the comparability of a measurement instrument, such as a survey or test, across different groups.\n\n\n1.  **Configural invariance** refers to the most basic level of measurement invariance, and it is established when the same pattern of factor loadings and structure is observed across groups. This means that the underlying or \"latent\" constructs (factors) are defined the same way for different groups. This doesn't mean the strength of relationship between items and factors (loadings) or the item means (intercepts) are the same, just that the items relate to the same factors in all groups.\n\nIn the context of the K6 Distress Scale, configural invariance would suggest that the same six items are measuring the construct of psychological distress in the same way for both Māori and New Zealand Europeans, even though the strength of the relationship between the items and the construct (distress), or the average scores, might differ.\n\n2.  **Metric invariance** (also known as \"weak invariance\") refers to the assumption that factor loadings are equivalent across groups, meaning that the relationship or association between the measured items and their underlying factor is the same in all groups. This is important when comparing the strength of relationships with other variables across groups.\n\nIf metric invariance holds for the K6 Distress Scale, this would mean that a unit change in the latent distress factor would correspond to the same change in each item score (e.g., feeling nervous, hopeless, restless, etc.) for both Māori and New Zealand Europeans.\n\n3.  **Scalar invariance** (also known as \"strong invariance\") involves equivalence of both factor loadings and intercepts (item means) across groups. This means that not only are the relationships between the items and the factors the same across groups (as with metric invariance), but also the zero-points or origins of the scales are the same. Scalar invariance is necessary when one wants to compare latent mean scores across groups.\n\nIn the context of the K6 Distress Scale, if scalar invariance holds, it would mean that a specific score on the scale would correspond to the same level of the underlying distress factor for both Māori and New Zealand Europeans. It would mean that the groups do not differ systematically in how they interpret and respond to the items. If this holds, one can make meaningful comparisons of distress level between Maori and New Zealand Europeans based on the scale scores.\n\nNote: each of these levels of invariance is a progressively stricter test of the equivalence of the measurement instrument across groups. Demonstrating scalar invariance, for example, also demonstrates configural and metric invariance. On the other hand, failure to demonstrate metric invariance means that scalar invariance also does not hold. These tests are therefore usually conducted in sequence. The results of these tests should be considered when comparing group means or examining the relationship between a scale and other variables across groups.\n\n### Configural invariance\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_eth_configural\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# Comparison of Model Performance Indices\n\nName                         |  Model |    Chi2 | Chi2_df | p (Chi2) | Baseline(42) | p (Baseline) |   GFI |  AGFI |   NFI |  NNFI |   CFI | RMSEA |    RMSEA  CI | p (RMSEA) |    RMR |  SRMR |   RFI |  PNFI |   IFI |   RNI | Loglikelihood |   AIC (weights) |   BIC (weights) | BIC_adjusted\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\none_latent_eth_configural    | lavaan | 800.969 |  28.000 |   < .001 |    13476.695 |       < .001 | 0.982 | 0.956 | 0.941 | 0.914 | 0.942 | 0.102 | [0.10, 0.11] |    < .001 | 40.211 | 0.041 | 0.911 | 0.627 | 0.943 | 0.942 |    -87776.911 | 1.8e+05 (<.001) | 1.8e+05 (<.001) |    1.758e+05\ntwo_latents_eth_configural   | lavaan | 180.274 |  26.000 |   < .001 |    13476.695 |       < .001 | 0.996 | 0.990 | 0.987 | 0.981 | 0.989 | 0.047 | [0.04, 0.05] |    0.735  | 31.500 | 0.018 | 0.978 | 0.611 | 0.989 | 0.989 |    -87466.564 | 1.8e+05 (<.001) | 1.8e+05 (<.001) |    1.752e+05\nthree_latents_eth_configural | lavaan | 113.269 |  24.000 |   < .001 |    13476.695 |       < .001 | 0.998 | 0.993 | 0.992 | 0.988 | 0.993 | 0.038 | [0.03, 0.04] |    0.998  | 27.758 | 0.014 | 0.985 | 0.567 | 0.993 | 0.993 |    -87433.062 | 1.7e+05 (>.999) | 1.8e+05 (>.999) |    1.751e+05\n```\n\n\n:::\n\n```{.r .cell-code}\ncompare_eth_configural_key <- compare_eth_configural[, c(\"Name\", \"Chi2\", \"Chi2_df\",\"RFI\", \"NNFI\", \"CFI\",\"GFI\",\"RMSEA\", \"RMSEA_CI_low\", \"RMSEA_CI_high\", \"AIC\", \"BIC\")]\n\nas.data.frame(compare_eth_configural_key)|>\n  kbl(format = \"markdown\")\n```\n\n::: {.cell-output-display}\n\n\n|Name                         |     Chi2| Chi2_df|       RFI|      NNFI|       CFI|       GFI|     RMSEA| RMSEA_CI_low| RMSEA_CI_high|      AIC|      BIC|\n|:----------------------------|--------:|-------:|---------:|---------:|---------:|---------:|---------:|------------:|-------------:|--------:|--------:|\n|one_latent_eth_configural    | 800.9685|      28| 0.9108496| 0.9136971| 0.9424648| 0.9823827| 0.1021716|    0.0961378|     0.1083325| 175637.8| 175913.9|\n|two_latents_eth_configural   | 180.2737|      26| 0.9783915| 0.9814502| 0.9885168| 0.9962273| 0.0473683|    0.0409704|     0.0540181| 175021.1| 175310.4|\n|three_latents_eth_configural | 113.2689|      24| 0.9852916| 0.9883719| 0.9933553| 0.9975998| 0.0375036|    0.0307101|     0.0445951| 174958.1| 175260.5|\n\n\n:::\n:::\n\n\n\n\nThe table represents the comparison of three multi-group confirmatory factor analysis (CFA) models conducted to test for configural invariance across different ethnic categories (eth_cat). Configural invariance refers to whether the pattern of factor loadings is the same across groups. It's the most basic form of measurement invariance.\n\nLooking at the results, we can draw the following conclusions:\n\n1.  **Chi2 (Chi-square)**: a lower value suggests a better model fit. In this case, the three looks best \n\n2.  **GFI (Goodness of Fit Index) and AGFI (Adjusted Goodness of Fit Index)**: These values range from 0 to 1, with values closer to 1 suggesting a better fit. All models are close. \n\n3.  **NFI (Normed Fit Index), NNFI (Non-Normed Fit Index, also called TLI), CFI (Comparative Fit Index)**: These range from 0 to 1, with values closer to 1 suggesting a better fit. The two and three factors models have the highest values.\n\n4.  **RMSEA (Root Mean Square Error of Approximation)**: lower values are better, with values below 0.05 considered good and up to 0.08 considered acceptable.Only two and three meet this threshold.\n\n5.  **RMR (Root Mean Square Residual) and SRMR (Standardized Root Mean Square Residual)**: three is best.\n\n6.  **RFI (Relative Fit Index), PNFI (Parsimonious Normed Fit Index), IFI (Incremental Fit Index), RNI (Relative Noncentrality Index)**: These range from 0 to 1, with values closer to 1 suggesting a better fit. Again three is the winner.\n\n7.  **AIC (Akaike Information Criterion) and BIC (Bayesian Information Criterion)**: Three again....\n\n### Analysis of the Results:\n- **One Latent Model**: shows the poorest fit among the models with a high RMSEA and the lowest CFI. The model's Chi-squared value is also significantly high, indicating a substantial misfit with the observed data.\n\n- **Two Latents Model**: displays a much improved fit compared to the one latent model, as evident from its much lower Chi-squared value, lower RMSEA, and higher CFI. This suggests that two factors might be necessary to adequately represent the underlying structure in the data.\n\n- **Three Latents Model**: provides the best fit metrics among the three configurations...\n\n### Metric Equivalence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompare_eth_metric <- compare_eth_metric[, c(\"Name\", \"Chi2\", \"Chi2_df\",\"RFI\", \"NNFI\", \"CFI\",\"GFI\",\"RMSEA\", \"RMSEA_CI_low\", \"RMSEA_CI_high\", \"AIC\", \"BIC\")]\n\nas.data.frame(compare_eth_metric)|>\n  kbl(format = \"markdown\")\n```\n\n::: {.cell-output-display}\n\n\n|Name                     |     Chi2| Chi2_df|       RFI|      NNFI|       CFI|       GFI|     RMSEA| RMSEA_CI_low| RMSEA_CI_high|      AIC|      BIC|\n|:------------------------|--------:|-------:|---------:|---------:|---------:|---------:|---------:|------------:|-------------:|--------:|--------:|\n|one_latent_eth_metric    | 811.1913|      34| 0.9256450| 0.9285388| 0.9421504| 0.9821484| 0.0929721|    0.0874857|     0.0985727| 175636.0| 175872.7|\n|two_latents_eth_metric   | 189.3619|      31| 0.9809631| 0.9840298| 0.9882125| 0.9960306| 0.0439514|    0.0380484|     0.0500736| 175020.2| 175276.6|\n|three_latents_eth_metric | 122.3220|      28| 0.9863852| 0.9894688| 0.9929792| 0.9973895| 0.0356908|    0.0293504|     0.0422873| 174959.2| 175235.3|\n\n\n:::\n:::\n\n\n\n\nThis table presents the results of a multi-group confirmatory factor analysis (CFA) conducted to test metric equivalence (also known as weak measurement invariance) across different ethnic categories (eth_cat).  \n\nThree wins again...but not by much.\n\n\n### Scalar Equivalence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# view as html table\n\ncompare_eth_scalar <- compare_eth_scalar[, c(\"Name\", \"Chi2\", \"Chi2_df\",\"RFI\", \"NNFI\", \"CFI\",\"GFI\",\"RMSEA\", \"RMSEA_CI_low\", \"RMSEA_CI_high\", \"AIC\", \"BIC\")]\n\nas.data.frame(compare_eth_scalar)|>\n  kbl(format = \"markdown\")\n```\n\n::: {.cell-output-display}\n\n\n|Name                     |     Chi2| Chi2_df|       RFI|      NNFI|       CFI|       GFI|     RMSEA| RMSEA_CI_low| RMSEA_CI_high|      AIC|      BIC|\n|:------------------------|--------:|-------:|---------:|---------:|---------:|---------:|---------:|------------:|-------------:|--------:|--------:|\n|one_latent_eth_scalar    | 843.2570|      40| 0.9342999| 0.9372208| 0.9402103| 0.9814994| 0.0871416|    0.0820745|     0.0923115| 175656.1| 175853.3|\n|two_latents_eth_scalar   | 211.5894|      36| 0.9816829| 0.9847518| 0.9869302| 0.9955214| 0.0429463|    0.0374496|     0.0486336| 175032.4| 175255.9|\n|three_latents_eth_scalar | 144.5053|      32| 0.9859266| 0.9890088| 0.9916258| 0.9968788| 0.0364619|    0.0305384|     0.0426093| 174973.4| 175223.1|\n\n\n:::\n:::\n\n\n\n\nOverall it seems that we have good evidence for the three-factor model of Kessler-6, but two-factor is close.\n\n\n### Lab assignment\n\nUsing the code above, perform MG-CFA on personality measures using the `df_nz` data set. \n\n\n\n\n### Packages\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreport::cite_packages()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  - Arel-Bundock V (2024). _marginaleffects: Predictions, Comparisons, Slopes, Marginal Means, and Hypothesis Tests_. R package version 0.19.0, <https://CRAN.R-project.org/package=marginaleffects>.\n  - Barrett M (2021). _ggokabeito: 'Okabe-Ito' Scales for 'ggplot2' and 'ggraph'_. R package version 0.1.0, <https://CRAN.R-project.org/package=ggokabeito>.\n  - Bates D, Mächler M, Bolker B, Walker S (2015). \"Fitting Linear Mixed-Effects Models Using lme4.\" _Journal of Statistical Software_, *67*(1), 1-48. doi:10.18637/jss.v067.i01 <https://doi.org/10.18637/jss.v067.i01>.\n  - Bates D, Maechler M, Jagan M (2024). _Matrix: Sparse and Dense Matrix Classes and Methods_. R package version 1.6-5, <https://CRAN.R-project.org/package=Matrix>.\n  - Bengtsson H (2021). \"A Unifying Framework for Parallel and Distributed Processing in R using Futures.\" _The R Journal_, *13*(2), 208-227. doi:10.32614/RJ-2021-048 <https://doi.org/10.32614/RJ-2021-048>, <https://doi.org/10.32614/RJ-2021-048>.\n  - Bengtsson H (2021). \"A Unifying Framework for Parallel and Distributed Processing in R using Futures.\" _The R Journal_, *13*(2), 208-227. doi:10.32614/RJ-2021-048 <https://doi.org/10.32614/RJ-2021-048>, <https://doi.org/10.32614/RJ-2021-048>.\n  - Bengtsson H (2023). _progressr: An Inclusive, Unifying API for Progress Updates_. R package version 0.14.0, <https://CRAN.R-project.org/package=progressr>.\n  - Blair G, Cooper J, Coppock A, Humphreys M, Bicalho C, Fultz N, Medina L (2021). _DesignLibrary: Library of Research Designs_. R package version 0.1.10, <https://CRAN.R-project.org/package=DesignLibrary>.\n  - Blair G, Cooper J, Coppock A, Humphreys M, Rudkin A, Fultz N (2024). _fabricatr: Imagine Your Data Before You Collect It_. R package version 1.0.2, <https://CRAN.R-project.org/package=fabricatr>.\n  - Blair G, Cooper J, Coppock A, Humphreys M, Sonnet L (2024). _estimatr: Fast Estimators for Design-Based Inference_. R package version 1.0.4, <https://CRAN.R-project.org/package=estimatr>.\n  - Blair G, Coppock A, Humphreys M (2023). _Research Design in the Social Sciences: Declaration, Diagnosis, and Redesign_. Princeton University Press, Princeton. <https://book.declaredesign.org>. Blair G, Cooper J, Coppock A, Humphreys M (2019). \"Declaring and Diagnosing Research Designs.\" _American Political Science Review_, *113*, 838-859. <https://declaredesign.org/paper.pdf>.\n  - Brown C (2018). _formula.tools: Programmatic Utilities for Manipulating Formulas, Expressions, Calls, Assignments and Other R Objects_. R package version 1.7.1, <https://CRAN.R-project.org/package=formula.tools>.\n  - Bulbulia J (2024). _margot: MARGinal Observational Treatment-effects_. doi:10.5281/zenodo.10907724 <https://doi.org/10.5281/zenodo.10907724>, R package version 0.1.2. License: CC BY 4.0. Functions to obtain MARGinal Observational Treatment-effects from observational data., <https://go-bayes.github.io/margot/>.\n  - Chang W (2023). _extrafont: Tools for Using Fonts_. R package version 0.19, <https://CRAN.R-project.org/package=extrafont>.\n  - Chen T, He T, Benesty M, Khotilovich V, Tang Y, Cho H, Chen K, Mitchell R, Cano I, Zhou T, Li M, Xie J, Lin M, Geng Y, Li Y, Yuan J (2024). _xgboost: Extreme Gradient Boosting_. R package version 1.7.7.1, <https://CRAN.R-project.org/package=xgboost>.\n  - Christopher H. Jackson (2011). \"Multi-State Models for Panel Data: The msm Package for R.\" _Journal of Statistical Software_, *38*(8), 1-29. doi:10.18637/jss.v038.i08 <https://doi.org/10.18637/jss.v038.i08>.\n  - Coppock A (2023). _randomizr: Easy-to-Use Tools for Common Forms of Random Assignment and Sampling_. R package version 1.0.0, <https://CRAN.R-project.org/package=randomizr>.\n  - Csárdi G, Hester J, Wickham H, Chang W, Morgan M, Tenenbaum D (2024). _remotes: R Package Installation from Remote Repositories, Including 'GitHub'_. R package version 2.5.0, <https://CRAN.R-project.org/package=remotes>.\n  - Eddelbuettel D, Francois R, Allaire J, Ushey K, Kou Q, Russell N, Ucar I, Bates D, Chambers J (2024). _Rcpp: Seamless R and C++ Integration_. R package version 1.0.12, <https://CRAN.R-project.org/package=Rcpp>. Eddelbuettel D, François R (2011). \"Rcpp: Seamless R and C++ Integration.\" _Journal of Statistical Software_, *40*(8), 1-18. doi:10.18637/jss.v040.i08 <https://doi.org/10.18637/jss.v040.i08>. Eddelbuettel D (2013). _Seamless R and C++ Integration with Rcpp_. Springer, New York. doi:10.1007/978-1-4614-6868-4 <https://doi.org/10.1007/978-1-4614-6868-4>, ISBN 978-1-4614-6867-7. Eddelbuettel D, Balamuta J (2018). \"Extending R with C++: A Brief Introduction to Rcpp.\" _The American Statistician_, *72*(1), 28-36. doi:10.1080/00031305.2017.1375990 <https://doi.org/10.1080/00031305.2017.1375990>.\n  - Firke S (2023). _janitor: Simple Tools for Examining and Cleaning Dirty Data_. R package version 2.2.0, <https://CRAN.R-project.org/package=janitor>.\n  - Friedman J, Tibshirani R, Hastie T (2010). \"Regularization Paths for Generalized Linear Models via Coordinate Descent.\" _Journal of Statistical Software_, *33*(1), 1-22. doi:10.18637/jss.v033.i01 <https://doi.org/10.18637/jss.v033.i01>. Simon N, Friedman J, Tibshirani R, Hastie T (2011). \"Regularization Paths for Cox's Proportional Hazards Model via Coordinate Descent.\" _Journal of Statistical Software_, *39*(5), 1-13. doi:10.18637/jss.v039.i05 <https://doi.org/10.18637/jss.v039.i05>. Tay JK, Narasimhan B, Hastie T (2023). \"Elastic Net Regularization Paths for All Generalized Linear Models.\" _Journal of Statistical Software_, *106*(1), 1-31. doi:10.18637/jss.v106.i01 <https://doi.org/10.18637/jss.v106.i01>.\n  - Greifer N (2024). _cobalt: Covariate Balance Tables and Plots_. R package version 4.5.5, <https://CRAN.R-project.org/package=cobalt>.\n  - Greifer N (2024). _WeightIt: Weighting for Covariate Balance in Observational Studies_. R package version 1.0.0, <https://CRAN.R-project.org/package=WeightIt>.\n  - Greifer N, Worthington S, Iacus S, King G (2023). _clarify: Simulation-Based Inference for Regression Models_. R package version 0.2.0, <https://CRAN.R-project.org/package=clarify>.\n  - Grolemund G, Wickham H (2011). \"Dates and Times Made Easy with lubridate.\" _Journal of Statistical Software_, *40*(3), 1-25. <https://www.jstatsoft.org/v40/i03/>.\n  - Halekoh U, Højsgaard S, Yan J (2006). \"The R Package geepack for Generalized Estimating Equations.\" _Journal of Statistical Software_, *15/2*, 1-11. Yan J, Fine JP (2004). \"Estimating Equations for Association Structures.\" _Statistics in Medicine_, *23*, 859-880. Yan J (2002). \"geepack: Yet Another Package for Generalized Estimating Equations.\" _R-News_, *2/3*, 12-14.\n  - Hansen BB, Klopfer SO (2006). \"Optimal full matching and related designs via network flows.\" _Journal of Computational and Graphical Statistics_, *15*(3), 609-627.\n  - Hastie SMDfmbT, wrapper. RTUAMFuwTLl (2024). _earth: Multivariate Adaptive Regression Splines_. R package version 5.3.3, <https://CRAN.R-project.org/package=earth>.\n  - Helske S, Helske J (2019). \"Mixture Hidden Markov Models for Sequence Data: The seqHMM Package in R.\" _Journal of Statistical Software_, *88*(3), 1-32. doi:10.18637/jss.v088.i03 <https://doi.org/10.18637/jss.v088.i03>. Helske J, Helske S (2023). _seqHMM: Mixture hidden Markov models for social sequence data and other multivariate, multichannel categorical time series_. R package version 1.2.6, <https://cran.r-project.org/package=seqHMM>.\n  - Henry L, Wickham H (2024). _rlang: Functions for Base Types and Core R and 'Tidyverse' Features_. R package version 1.1.3, <https://CRAN.R-project.org/package=rlang>.\n  - Hester J, Bryan J (2024). _glue: Interpreted String Literals_. R package version 1.7.0, <https://CRAN.R-project.org/package=glue>.\n  - Hester J, Wickham H, Csárdi G (2024). _fs: Cross-Platform File System Operations Based on 'libuv'_. R package version 1.6.4, <https://CRAN.R-project.org/package=fs>.\n  - Ho D, Imai K, King G, Stuart E (2011). \"MatchIt: Nonparametric Preprocessing for Parametric Causal Inference.\" _Journal of Statistical Software_, *42*(8), 1-28. doi:10.18637/jss.v042.i08 <https://doi.org/10.18637/jss.v042.i08>.\n  - Honaker J, King G, Blackwell M (2011). \"Amelia II: A Program for Missing Data.\" _Journal of Statistical Software_, *45*(7), 1-47. doi:10.18637/jss.v045.i07 <https://doi.org/10.18637/jss.v045.i07>.\n  - Iannone R, Cheng J, Schloerke B, Hughes E, Lauer A, Seo J (2024). _gt: Easily Create Presentation-Ready Display Tables_. R package version 0.10.1, <https://CRAN.R-project.org/package=gt>.\n  - J L (2006). \"Plotrix: a package in the red light district of R.\" _R-News_, *6*(4), 8-12.\n  - Kassambara A (2023). _ggpubr: 'ggplot2' Based Publication Ready Plots_. R package version 0.6.0, <https://CRAN.R-project.org/package=ggpubr>.\n  - Kay M (2024). \"ggdist: Visualizations of Distributions and Uncertainty in the Grammar of Graphics.\" _IEEE Transactions on Visualization and Computer Graphics_, *30*(1), 414-424. doi:10.1109/TVCG.2023.3327195 <https://doi.org/10.1109/TVCG.2023.3327195>. Kay M (2024). _ggdist: Visualizations of Distributions and Uncertainty_. doi:10.5281/zenodo.3879620 <https://doi.org/10.5281/zenodo.3879620>, R package version 3.3.2, <https://mjskay.github.io/ggdist/>.\n  - Lüdecke D (2018). \"ggeffects: Tidy Data Frames of Marginal Effects from Regression Models.\" _Journal of Open Source Software_, *3*(26), 772. doi:10.21105/joss.00772 <https://doi.org/10.21105/joss.00772>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Makowski D (2020). \"Extracting, Computing and Exploring the Parameters of Statistical Models using R.\" _Journal of Open Source Software_, *5*(53), 2445. doi:10.21105/joss.02445 <https://doi.org/10.21105/joss.02445>.\n  - Lüdecke D, Ben-Shachar M, Patil I, Waggoner P, Makowski D (2021). \"performance: An R Package for Assessment, Comparison and Testing of Statistical Models.\" _Journal of Open Source Software_, *6*(60), 3139. doi:10.21105/joss.03139 <https://doi.org/10.21105/joss.03139>.\n  - Lumley T (2024). \"survey: analysis of complex survey samples.\" R package version 4.4. Lumley T (2004). \"Analysis of Complex Survey Samples.\" _Journal of Statistical Software_, *9*(1), 1-19. R package verson 2.2. Lumley T (2010). _Complex Surveys: A Guide to Analysis Using R: A Guide to Analysis Using R_. John Wiley and Sons.\n  - Milborrow S (2024). _plotmo: Plot a Model's Residuals, Response, and Partial Dependence Plots_. R package version 3.6.3, <https://CRAN.R-project.org/package=plotmo>.\n  - Mullen KM, van Stokkum IHM (2023). _nnls: The Lawson-Hanson Algorithm for Non-Negative Least Squares (NNLS)_. R package version 1.5, <https://CRAN.R-project.org/package=nnls>.\n  - Müller K (2020). _here: A Simpler Way to Find Your Files_. R package version 1.0.1, <https://CRAN.R-project.org/package=here>.\n  - Müller K, Wickham H (2023). _tibble: Simple Data Frames_. R package version 3.2.1, <https://CRAN.R-project.org/package=tibble>.\n  - Ooms J (2022). _katex: Rendering Math to HTML, 'MathML', or R-Documentation Format_. R package version 1.4.1, <https://CRAN.R-project.org/package=katex>.\n  - Ooms J (2023). _pdftools: Text Extraction, Rendering and Converting of PDF Documents_. R package version 3.4.0, <https://CRAN.R-project.org/package=pdftools>.\n  - Pedersen T (2024). _patchwork: The Composer of Plots_. R package version 1.2.0, <https://CRAN.R-project.org/package=patchwork>.\n  - Pishgar F, Greifer N, Leyrat C, Stuart E (2021). \"MatchThem:: Matching and Weighting after Multiple Imputation.\" _The R Journal_. doi:10.32614/RJ-2021-073 <https://doi.org/10.32614/RJ-2021-073>, <https://journal.r-project.org/archive/2021/RJ-2021-073/>.\n  - Polley E, LeDell E, Kennedy C, van der Laan M (2024). _SuperLearner: Super Learner Prediction_. R package version 2.0-30-9000, <https://github.com/ecpolley/SuperLearner>.\n  - R Core Team (2024). _R: A Language and Environment for Statistical Computing_. R Foundation for Statistical Computing, Vienna, Austria. <https://www.R-project.org/>.\n  - Rich B (2023). _table1: Tables of Descriptive Statistics in HTML_. R package version 1.4.3, <https://CRAN.R-project.org/package=table1>.\n  - Richardson N, Cook I, Crane N, Dunnington D, François R, Keane J, Moldovan-Grünfeld D, Ooms J, Wujciak-Jens J, Apache Arrow (2024). _arrow: Integration to 'Apache' 'Arrow'_. R package version 15.0.1, <https://CRAN.R-project.org/package=arrow>.\n  - Robinson D, Hayes A, Couch S (2023). _broom: Convert Statistical Objects into Tidy Tibbles_. R package version 1.0.5, <https://CRAN.R-project.org/package=broom>.\n  - Robitzsch A, Grund S (2024). _miceadds: Some Additional Multiple Imputation Functions, Especially for 'mice'_. R package version 3.17-44, <https://CRAN.R-project.org/package=miceadds>.\n  - Sjoberg D, Whiting K, Curry M, Lavery J, Larmarange J (2021). \"Reproducible Summary Tables with the gtsummary Package.\" _The R Journal_, *13*, 570-580. doi:10.32614/RJ-2021-053 <https://doi.org/10.32614/RJ-2021-053>, <https://doi.org/10.32614/RJ-2021-053>.\n  - Sjolander A, Dahlqwist E (2021). _stdReg: Regression Standardization_. R package version 3.4.1, <https://CRAN.R-project.org/package=stdReg>.\n  - Therneau T (2024). _A Package for Survival Analysis in R_. R package version 3.5-8, <https://CRAN.R-project.org/package=survival>. Terry M. Therneau, Patricia M. Grambsch (2000). _Modeling Survival Data: Extending the Cox Model_. Springer, New York. ISBN 0-387-98784-3.\n  - Tibshirani J, Athey S, Sverdrup E, Wager S (2024). _grf: Generalized Random Forests_. R package version 2.3.2, <https://CRAN.R-project.org/package=grf>.\n  - Tierney N, Cook D (2023). \"Expanding Tidy Data Principles to Facilitate Missing Data Exploration, Visualization and Assessment of Imputations.\" _Journal of Statistical Software_, *105*(7), 1-31. doi:10.18637/jss.v105.i07 <https://doi.org/10.18637/jss.v105.i07>.\n  - van Buuren S, Groothuis-Oudshoorn K (2011). \"mice: Multivariate Imputation by Chained Equations in R.\" _Journal of Statistical Software_, *45*(3), 1-67. doi:10.18637/jss.v045.i03 <https://doi.org/10.18637/jss.v045.i03>.\n  - van der Wal WM, Geskus RB (2011). \"ipw: An R Package for Inverse Probability Weighting.\" _Journal of Statistical Software_, *43*(13), 1-23. doi:10.18637/jss.v043.i13 <https://doi.org/10.18637/jss.v043.i13>.\n  - VanderWeele TJ, Ding P (2011). \"Sensitivity analysis in observational research: introducing the E-value.\" _Annals of Internal Medicine_, *167*(4), 268-274. Mathur MB, VanderWeele TJ (2019). \"Sensitivity analysis for unmeasured confounding in meta-analyses.\" _Journal of the American Statistical Association>_. Smith LH, VanderWeele TJ (2019). \"Bounding bias due to selection.\" _Epidemiology_.\n  - Waring E, Quinn M, McNamara A, Arino de la Rubia E, Zhu H, Ellis S (2022). _skimr: Compact and Flexible Summaries of Data_. R package version 2.1.5, <https://CRAN.R-project.org/package=skimr>.\n  - Wickham H (2016). _ggplot2: Elegant Graphics for Data Analysis_. Springer-Verlag New York. ISBN 978-3-319-24277-4, <https://ggplot2.tidyverse.org>.\n  - Wickham H (2023). _conflicted: An Alternative Conflict Resolution Strategy_. R package version 1.2.0, <https://CRAN.R-project.org/package=conflicted>.\n  - Wickham H (2023). _forcats: Tools for Working with Categorical Variables (Factors)_. R package version 1.0.0, <https://CRAN.R-project.org/package=forcats>.\n  - Wickham H (2023). _stringr: Simple, Consistent Wrappers for Common String Operations_. R package version 1.5.1, <https://CRAN.R-project.org/package=stringr>.\n  - Wickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to the tidyverse.\" _Journal of Open Source Software_, *4*(43), 1686. doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n  - Wickham H, Bryan J, Barrett M, Teucher A (2024). _usethis: Automate Package and Project Setup_. R package version 2.2.3, <https://CRAN.R-project.org/package=usethis>.\n  - Wickham H, François R, Henry L, Müller K, Vaughan D (2023). _dplyr: A Grammar of Data Manipulation_. R package version 1.1.4, <https://CRAN.R-project.org/package=dplyr>.\n  - Wickham H, Henry L (2023). _purrr: Functional Programming Tools_. R package version 1.0.2, <https://CRAN.R-project.org/package=purrr>.\n  - Wickham H, Hester J, Bryan J (2024). _readr: Read Rectangular Text Data_. R package version 2.1.5, <https://CRAN.R-project.org/package=readr>.\n  - Wickham H, Hester J, Chang W, Bryan J (2022). _devtools: Tools to Make Developing R Packages Easier_. R package version 2.4.5, <https://CRAN.R-project.org/package=devtools>.\n  - Wickham H, Vaughan D, Girlich M (2024). _tidyr: Tidy Messy Data_. R package version 1.3.1, <https://CRAN.R-project.org/package=tidyr>.\n  - William Revelle (2024). _psych: Procedures for Psychological, Psychometric, and Personality Research_. Northwestern University, Evanston, Illinois. R package version 2.4.3, <https://CRAN.R-project.org/package=psych>.\n  - Williams N, Díaz I (2023). \"lmtp: An R package for estimating the causal effects of modified treatment policies.\" _Observational Studies_. <https://muse.jhu.edu/article/883479>. Díaz I, Williams N, Hoffman K, Schneck E (2021). \"Non-parametric causal effects based on longitudinal modified treatment policies.\" _Journal of the American Statistical Association_. doi:10.1080/01621459.2021.1955691 <https://doi.org/10.1080/01621459.2021.1955691>.\n  - Wright MN, Ziegler A (2017). \"ranger: A Fast Implementation of Random Forests for High Dimensional Data in C++ and R.\" _Journal of Statistical Software_, *77*(1), 1-17. doi:10.18637/jss.v077.i01 <https://doi.org/10.18637/jss.v077.i01>.\n  - Xie Y (2023). _knitr: A General-Purpose Package for Dynamic Report Generation in R_. R package version 1.45, <https://yihui.org/knitr/>. Xie Y (2015). _Dynamic Documents with R and knitr_, 2nd edition. Chapman and Hall/CRC, Boca Raton, Florida. ISBN 978-1498716963, <https://yihui.org/knitr/>. Xie Y (2014). \"knitr: A Comprehensive Tool for Reproducible Research in R.\" In Stodden V, Leisch F, Peng RD (eds.), _Implementing Reproducible Computational Research_. Chapman and Hall/CRC. ISBN 978-1466561595.\n  - Xie Y (2024). _tinytex: Helper Functions to Install and Maintain TeX Live, and Compile LaTeX Documents_. R package version 0.50, <https://github.com/rstudio/tinytex>. Xie Y (2019). \"TinyTeX: A lightweight, cross-platform, and easy-to-maintain LaTeX distribution based on TeX Live.\" _TUGboat_, *40*(1), 30-32. <https://tug.org/TUGboat/Contents/contents40-1.html>.\n  - Zeileis A, Croissant Y (2010). \"Extended Model Formulas in R: Multiple Parts and Multiple Responses.\" _Journal of Statistical Software_, *34*(1), 1-13. doi:10.18637/jss.v034.i01 <https://doi.org/10.18637/jss.v034.i01>.\n  - Zeileis A, Köll S, Graham N (2020). \"Various Versatile Variances: An Object-Oriented Implementation of Clustered Covariances in R.\" _Journal of Statistical Software_, *95*(1), 1-36. doi:10.18637/jss.v095.i01 <https://doi.org/10.18637/jss.v095.i01>. Zeileis A (2004). \"Econometric Computing with HC and HAC Covariance Matrix Estimators.\" _Journal of Statistical Software_, *11*(10), 1-17. doi:10.18637/jss.v011.i10 <https://doi.org/10.18637/jss.v011.i10>. Zeileis A (2006). \"Object-Oriented Computation of Sandwich Estimators.\" _Journal of Statistical Software_, *16*(9), 1-16. doi:10.18637/jss.v016.i09 <https://doi.org/10.18637/jss.v016.i09>.\n  - Zhu H (2024). _kableExtra: Construct Complex Table with 'kable' and Pipe Syntax_. R package version 1.4.0, <https://CRAN.R-project.org/package=kableExtra>.\n```\n\n\n:::\n:::\n",
    "supporting": [
      "11-content_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}