{
  "hash": "a16393f0101a2e1d7d5609a597c9ec48",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Demo aft format to use as template\"\nformat:\n  aft-pdf:\n    keep-tex: true  \n  aft-html: default\nauthor:\n  - name: John Doe\n    affiliations:\n      - name: Dummy org\n        department: Cool Dep\n        address: Somewhere\n        city: Magic city\n        country: best one\n        postal-code: 9999\n      - Demo Journal\n    orcid: 0000-0000-0000-0000\n    email: JD@example.org\n    url: https://example.org/\n  - name: his friend\n    affiliations:\n      - Another Affiliation\nabstract: |\n  This document is only a demo explaining how to use the template.\nkeywords: [template, demo]\nreference-section-title: References\nbibliography: bibliography.bib  \n---\n\n\n\n\n\n\n\n\n\n## Introduction {#sec-intro}\n\nThis is a dummy example only for the purpose to use this repo as a template starter for creating new formats.  For this `article-format-template` we call our dummy article `aft`. \n\nThis quarto extension format supports PDF and HTML outputs. `quarto-journals` is aiming at porting existing {{< latex >}} template from journals to be used with quarto. PDF format is what require the most work to fit the journals guideline, but Quarto offer a nice rendering for HTML output too. This demo format template only use basic HTML format without any customization for now.\n\n## About Quarto Extensions formats And Quarto Journals Article\n\nFirst, please get familiar with the following resources: \n\n- [Creating Formats](https://quarto.org/docs/extensions/formats.html) in Quarto as part of the [Extensions](https://quarto.org/docs/extensions/) mechanism.\n- [Journals Articles](https://quarto.org/docs/journals/) for Quarto.\n\n## Structure of this repository\n\nEverything for the extensions is in `_extensions`. See Quarto doc for details. \n\n- In `partials`, you'll find the `.tex` partials that can be used and should be removed or tweaked,s\n\n- Your extension can make shortcodes and lua filters available. This document shows the effect of the one provided in the `aft` format. \n\n- `aft` format sets some defaults which are different from `pdf` or `html`, link setting links to URL in read inside PDF output.\n\nSource repository for this template format can found on [Github](https://github.com/quarto-journals/article-format-template)\n\n\n### `_extensions\\aft` \n\nIn this folder you'll find everything that defines the extensions which could be installed using `quarto install extension` or be part of the template when using `quarto use template`\n\nFormat Metadata\n  ~ This is in `_extension.yml` is where all the metadata about the format are defined so that Quarto knows what to use.\n  Adapt this file for you own template.\n\nPartials\n  ~ In `partials`, there are the `.tex` files that will be used as Pandoc's template. We provide here all the partials supported by Quarto and custom one for this format. Quarto allows to provide partials to ease the process of tweaking the default latex Pandoc's template and keeping it up to date.  \n    This template repo contains all the relevant partials that you can use with Quarto _as example_. We only tweaked `title.tex` to show the usage of a custom partials called `_custom.tex`.  \n    **Only keep the partials that you need to tweak for the format you are creating**\n\n    If you need to completely change the default template (i.g customizing partials is not enough), then you need to provide your own template to Pandoc based on [`template.tex`](https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/formats/pdf/pandoc/template.tex) and also using partials or not. This can be provided using the `template` YAML key in `_extension.yml` for Quarto to use it. \n\n    This is considered advanced configuration as it will be harder to maintain than only using partials but could be required for some specific format. Be aware that this may lead to loose some Pandoc or Quarto features tied to default `template.tex` content if you remove some specific parts.\n\nLua Filters\n  ~ Most of the time, custom formats will need Lua filters to provide specific features like cross format supports or provides custom shortcodes through the Quarto extension mechanism. Those filters will be available to the user and could be used in the custom formats (according to `_extensions` metadata). \n    We have provided two examples: \n\n    - `color-text.lua`, a Lua filter used to add color to inline text for PDF and HTML outputs using the same Markdown syntax\n    - `shorcodes.lua`, a Lua filter which follow [Quarto custom shortcodes](https://quarto.org/docs/authoring/shortcodes.html#custom-shortcodes) guidelines to provide a `{{< LaTeX >}}` shortcode to nicely print LaTeX in PDF and HTML. \n\n    **Remove or replace with your own Lua filters**\n\nFormat resources\n\n  ~ Resources required by the format needs to be available. We have provided two examples: \n\n    - `te.bst` is a biblio style file for demo. It has been downloaded from https://www.economics.utoronto.ca/osborne/latex/TEBST.HTM (http://econtheory.org/technical/te.bst) - Licence [LPPL](https://www.latex-project.org/lppl/)\n    - `aft.cls` is a dummy class file for this example format. It is a copy of official `article.cls`, the one provided in LaTeX installation (i.e at `kpsewhich article.cls`) and renamed as example (Licence LaTeX Project Public License)\n    - `custom.scss` is a style file to have a custom theme for our HTML format so that our Lua filter feature `color-tex.lua` works.\n\n    Those files are referenced within the `_extension.yml` to be used with our example format.\n\n    **Remove and replace with your own resources**\n\n`.quartoignore`\n\n  ~ Sometimes it is useful to have some files only needed for reference or for development. They should be available in the source repository but not downloaded to the user when `quarto use template` is used.\n\n    **Use `.quartoignore` to register such file and folder (one file or folder per line)**\n\n`style-guide` folder\n\n  ~ For `quarto-journals` format, use `style-guide` folder to include any documentation and resourced used for format creation, like a journal style guide or original `.tex` template. This folder is already added in `.quartoignore` in this example repo.\n\n    **Remove, rename or add to this folder**\n\n`template.qmd`\n\n  ~ This file is the template document that shows how to use the custom format. It will be downloaded with other resource by `quarto use template`, and even offered to be renamed if the name `template.qmd` is used. \n\n    This file will usually use the custom format (here `aft-pdf` and `aft-html`) and show how to use the template. When you'll copy this template, you should be able to render this document to the demo format. \n\n    **Adapt this file to provide a suitable template for your custom format**\n\nOther files\n\n  ~ Other files are needed by the template and are usually user provided - they are not part of the custom format. \n\n    Here `bibliography.bib` is here to demo the usage of the bst file from the custom format.\n\n    **Remove this file and provide a suitable one for your template**\n\n\n\n\n\n\n\n\n\n{{< pagebreak >}}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Checklist: Creating a custom format\n\nHere is the checklist to help you know what to modify:\n\n- Read the resources mentioned at the top,\n- Use this template repo to create a new repository for your format (Click on \"Use this template\" to create new github repo)\n- Once you are acquainted with the content, remove the resources that are there only as example (see above)\n- Update README by replacing `aft` and `Article Format Template` mentions for your journal format\n- Keep only the template partials that you need to tweak, and add custom ones if needed\n- Add any Lua filters for shortcodes and other that would be useful to create the expected output format\n- Add any external resource your format will need, and that should be part of the extension format that will be downloaded,\n- Check `_extension.yml` is updated correctly\n- Modify the skeleton `template.qmd` to your format and add any required resources to be downloaded to user.\n- Check `.quartoignore` is updated which everything that should not be downloaded.\n- Publish a demo of you format to github pages of the repo by using `quarto publish` command \n\n## Demo of some features found in this demo journal template\n\n### Shortcode demo {#sec-shortcode}\n\nPDF are rendered using {{< latex >}} but it is best if one can use a Markdown syntax for cross format support.\n\n`{{< latex >}}` used in source is a shortcode syntax where the shortcode is included in the extension folder `_extensions`\n\n### Code chunk {#sec-chunks}\n\nThis format hide chunks by default as option has been set in `_extension.yml` file.\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n> # Loading some data but this chunk won't be shown.\n> data(\"quine\", package = \"MASS\")\n```\n:::\n\n\n\n\n\n\n\n\n\nBut you can set `echo` option to `true` locally in the chunk\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm_pois <- glm(Days ~ (Eth + Sex + Age + Lrn)^2, data = quine, family = poisson)\nsummary(m_pois)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nglm(formula = Days ~ (Eth + Sex + Age + Lrn)^2, family = poisson, \n    data = quine)\n\nCoefficients: (1 not defined because of singularities)\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  2.93246    0.09826  29.843  < 2e-16 ***\nEthN        -0.17399    0.12134  -1.434   0.1516    \nSexM        -0.71452    0.12229  -5.843 5.14e-09 ***\nAgeF1       -0.04270    0.12691  -0.336   0.7365    \nAgeF2       -0.08632    0.16164  -0.534   0.5933    \nAgeF3       -0.15290    0.11898  -1.285   0.1987    \nLrnSL        0.21608    0.14558   1.484   0.1377    \nEthN:SexM    0.43902    0.09208   4.768 1.86e-06 ***\nEthN:AgeF1  -0.92889    0.14657  -6.337 2.34e-10 ***\nEthN:AgeF2  -1.33398    0.13504  -9.879  < 2e-16 ***\nEthN:AgeF3  -0.11242    0.13478  -0.834   0.4042    \nEthN:LrnSL   0.26415    0.11378   2.322   0.0203 *  \nSexM:AgeF1  -0.05565    0.16303  -0.341   0.7328    \nSexM:AgeF2   1.09942    0.15281   7.195 6.26e-13 ***\nSexM:AgeF3   1.15949    0.13859   8.366  < 2e-16 ***\nSexM:LrnSL   0.04143    0.13718   0.302   0.7627    \nAgeF1:LrnSL -0.13019    0.15688  -0.830   0.4066    \nAgeF2:LrnSL  0.37340    0.14563   2.564   0.0103 *  \nAgeF3:LrnSL       NA         NA      NA       NA    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 2073.5  on 145  degrees of freedom\nResidual deviance: 1368.7  on 128  degrees of freedom\nAIC: 1993.1\n\nNumber of Fisher Scoring iterations: 5\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n### Text color {#sec-summary}\n\nOur format makes applying color on inline text possible using the `[content]{color=<name>}` syntax. Let's see an example.\n\nHere we are using a special feature of our format which is the coloring because [pink is a **nice** color]{color=mypink}.\n\nThis is possible thanks to the Lua Filter included in the custom extension format.\n\n### Using references {.unnumbered}\n\nI did not read this book [@CameronTrivedi2013] but it must be interesting. \n\nDifferences between `aft-html` and `aft-pdf`: \n\n* For the HTML format, we are using Pandoc citeproc to include the bibliography. Here `reference-section-title` controls the title for the chapter that will be used.\n* For the PDF format, `natbib` is used by default and the bibliography is included with a title by the LaTeX template. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}